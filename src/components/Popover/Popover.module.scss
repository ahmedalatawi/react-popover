$arrow-size: 8px;
$bg-color: #ffffff;
$text-color: #374151;
$hover-bg: #f3f4f6;
$border-color: #e5e7eb;
$shadow: 0 4px 20px -2px rgba(0, 0, 0, 0.1), 0 2px 8px -2px rgba(0, 0, 0, 0.05);
$border-radius: 8px;
$z-index: 50;
$animation-duration: 200ms;
$animation-timing: cubic-bezier(0.4, 0, 0.2, 1);

.container {
  position: relative;
  display: inline-block;
}

.trigger {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
}

.content {
  position: fixed;
  z-index: $z-index;
  pointer-events: auto;

  &.animated {
    transition: opacity $animation-duration $animation-timing,
                transform $animation-duration $animation-timing;
  }

  &.enter {
    opacity: 1;
    transform: scale(1);
  }

  &.exit {
    opacity: 0;
    transform: scale(0.95);
    pointer-events: none;
  }
}

.contentInner {
  background-color: $bg-color;
  color: $text-color;
  border-radius: $border-radius;
  box-shadow: $shadow;
  border: 1px solid $border-color;
  position: relative;
  min-width: max-content;
  padding: 0.75rem;

  &[data-placement^='top'],
  &[data-placement^='bottom'],
  &[data-placement^='left'],
  &[data-placement^='right'] {
    &::before,
    &::after {
      content: '';
      position: absolute;
      width: $arrow-size;
      height: $arrow-size;
      background-color: $bg-color;
      transform: rotate(45deg);
    }

    &::before {
      background-color: $border-color;
      z-index: -1;
    }
  }

  // Top placements
  &[data-placement^='top'] {
    &::before {
      bottom: -($arrow-size / 2);
      border-right: 1px solid $border-color;
      border-bottom: 1px solid $border-color;
      box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.02);
    }
    &::after {
      bottom: -($arrow-size / 2 - 1px);
    }
  }

  // Bottom placements
  &[data-placement^='bottom'] {
    &::before {
      top: -($arrow-size / 2);
      border-left: 1px solid $border-color;
      border-top: 1px solid $border-color;
      box-shadow: -2px -2px 2px rgba(0, 0, 0, 0.02);
    }
    &::after {
      top: -($arrow-size / 2 - 1px);
    }
  }

  // Left placements
  &[data-placement^='left'] {
    &::before {
      right: -($arrow-size / 2);
      border-right: 1px solid $border-color;
      border-top: 1px solid $border-color;
      box-shadow: 2px -2px 2px rgba(0, 0, 0, 0.02);
    }
    &::after {
      right: -($arrow-size / 2 - 1px);
    }
  }

  // Right placements
  &[data-placement^='right'] {
    &::before {
      left: -($arrow-size / 2);
      border-left: 1px solid $border-color;
      border-bottom: 1px solid $border-color;
      box-shadow: -2px 2px 2px rgba(0, 0, 0, 0.02);
    }
    &::after {
      left: -($arrow-size / 2 - 1px);
    }
  }

  // Center alignments
  &[data-placement='top'],
  &[data-placement='bottom'] {
    &::before,
    &::after {
      left: 50%;
      transform: translateX(-50%) rotate(45deg);
    }
  }

  &[data-placement='left'],
  &[data-placement='right'] {
    &::before,
    &::after {
      top: 50%;
      transform: translateY(-50%) rotate(45deg);
    }
  }

  // Start alignments
  &[data-placement$='-start'] {
    &[data-placement^='top'],
    &[data-placement^='bottom'] {
      &::before,
      &::after {
        left: $arrow-size * 2;
        transform: rotate(45deg);
      }
    }

    &[data-placement^='left'],
    &[data-placement^='right'] {
      &::before,
      &::after {
        top: $arrow-size * 2;
        transform: rotate(45deg);
      }
    }
  }

  // End alignments
  &[data-placement$='-end'] {
    &[data-placement^='top'],
    &[data-placement^='bottom'] {
      &::before,
      &::after {
        left: auto;
        right: $arrow-size * 2;
        transform: rotate(45deg);
      }
    }

    &[data-placement^='left'],
    &[data-placement^='right'] {
      &::before,
      &::after {
        top: auto;
        bottom: $arrow-size * 2;
        transform: rotate(45deg);
      }
    }
  }
}

// Menu styles
.menuItem {
  width: 100%;
  padding: 0.5rem 1rem;
  text-align: left;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  transition: background-color 0.2s;
  border: none;
  background: none;
  color: $text-color;
  cursor: pointer;
  border-radius: $border-radius;
  font-size: 0.875rem;

  &:hover {
    background-color: $hover-bg;
  }

  svg {
    color: #6b7280;
  }
}

// Notification styles
.notification {
  padding: 0.5rem;
  border-radius: $border-radius;
  transition: background-color 0.2s;

  &:hover {
    background-color: $hover-bg;
  }

  .title {
    font-weight: 500;
    margin: 0;
    color: $text-color;
  }

  .time {
    color: #6b7280;
    font-size: 0.875rem;
    margin: 0.25rem 0 0 0;
  }
}